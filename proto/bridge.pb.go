// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: api/bridge.proto

package proto

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// later add X-Forwarded-For header for webhook provider IP address
// acts like a reverse proxy
type HTTPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPRequest) Reset() {
	*x = HTTPRequest{}
	mi := &file_api_bridge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPRequest) ProtoMessage() {}

func (x *HTTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bridge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPRequest.ProtoReflect.Descriptor instead.
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return file_api_bridge_proto_rawDescGZIP(), []int{0}
}

func (x *HTTPRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *HTTPRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HTTPRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type HTTPResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlowId        string                 `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	StatusCode    int32                  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPResponse) Reset() {
	*x = HTTPResponse{}
	mi := &file_api_bridge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPResponse) ProtoMessage() {}

func (x *HTTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bridge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPResponse.ProtoReflect.Descriptor instead.
func (*HTTPResponse) Descriptor() ([]byte, []int) {
	return file_api_bridge_proto_rawDescGZIP(), []int{1}
}

func (x *HTTPResponse) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *HTTPResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HTTPResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_api_bridge_proto protoreflect.FileDescriptor

const file_api_bridge_proto_rawDesc = "" +
	"\n" +
	"\x10api/bridge.proto\x12\x06bridge\"\xdc\x01\n" +
	"\vHTTPRequest\x12\x17\n" +
	"\aflow_id\x18\x01 \x01(\tR\x06flowId\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12:\n" +
	"\aheaders\x18\x04 \x03(\v2 .bridge.HTTPRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x01\n" +
	"\fHTTPResponse\x12\x17\n" +
	"\aflow_id\x18\x01 \x01(\tR\x06flowId\x12\x1f\n" +
	"\vstatus_code\x18\x02 \x01(\x05R\n" +
	"statusCode\x12;\n" +
	"\aheaders\x18\x03 \x03(\v2!.bridge.HTTPResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\fR\x04body\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012H\n" +
	"\rBridgeService\x127\n" +
	"\x06Stream\x12\x14.bridge.HTTPResponse\x1a\x13.bridge.HTTPRequest(\x010\x01B\x06Z\x04api/b\x06proto3"

var (
	file_api_bridge_proto_rawDescOnce sync.Once
	file_api_bridge_proto_rawDescData []byte
)

func file_api_bridge_proto_rawDescGZIP() []byte {
	file_api_bridge_proto_rawDescOnce.Do(func() {
		file_api_bridge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_bridge_proto_rawDesc), len(file_api_bridge_proto_rawDesc)))
	})
	return file_api_bridge_proto_rawDescData
}

var file_api_bridge_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_bridge_proto_goTypes = []any{
	(*HTTPRequest)(nil),  // 0: bridge.HTTPRequest
	(*HTTPResponse)(nil), // 1: bridge.HTTPResponse
	nil,                  // 2: bridge.HTTPRequest.HeadersEntry
	nil,                  // 3: bridge.HTTPResponse.HeadersEntry
}
var file_api_bridge_proto_depIdxs = []int32{
	2, // 0: bridge.HTTPRequest.headers:type_name -> bridge.HTTPRequest.HeadersEntry
	3, // 1: bridge.HTTPResponse.headers:type_name -> bridge.HTTPResponse.HeadersEntry
	1, // 2: bridge.BridgeService.Stream:input_type -> bridge.HTTPResponse
	0, // 3: bridge.BridgeService.Stream:output_type -> bridge.HTTPRequest
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_bridge_proto_init() }
func file_api_bridge_proto_init() {
	if File_api_bridge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_bridge_proto_rawDesc), len(file_api_bridge_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_bridge_proto_goTypes,
		DependencyIndexes: file_api_bridge_proto_depIdxs,
		MessageInfos:      file_api_bridge_proto_msgTypes,
	}.Build()
	File_api_bridge_proto = out.File
	file_api_bridge_proto_goTypes = nil
	file_api_bridge_proto_depIdxs = nil
}
